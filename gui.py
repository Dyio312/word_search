
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
from word_search_generator import WordSearch
from tkinter import ttk
from pathlib import Path
from tkinter import Checkbutton, IntVar
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\quanx\OneDrive\UET\Năm 2\Kì 2\CNPM\project\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("901x734")
window.configure(bg = "#FFFFFF")


canvas = Canvas(
    window,
    bg = "#FFFFFF",
    height = 734,
    width = 901,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_text(
    7.0,
    6.0,
    anchor="nw",
    text="Word list",
    fill="#000000",
    font=("Nunito", 20 * -1)
)

entry_image_1 = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    154.5,
    53.5,
    image=entry_image_1
)
entry_1 = Entry(
    bd=0,
    bg="#F3F3F3",
    fg="#000716",
    highlightthickness=0
)
entry_1.place(
    x=14.0,
    y=35.0,
    width=281.0,
    height=35.0
)
def on_entry1_click(event):
    # function that gets called whenever entry1 is clicked
    if entry_1.get() == 'Topics':
        entry_1.delete(0, "end")  # delete all the text in the entry
        entry_1.insert(0, '')  # Insert blank for user input
        entry_1.config(fg='black')

def on_entry1_focusout(event):
    if entry_1.get() == '':
        entry_1.insert(0, 'Topics')
        entry_1.config(fg='grey')

entry_1.bind('<FocusIn>', on_entry1_click)
entry_1.bind('<FocusOut>', on_entry1_focusout)

# Insert default text
entry_1.insert(0, 'Topics')
entry_1.config(fg='grey')
entry_image_2 = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    154.5,
    166.5,
    image=entry_image_2
)
entry_2 = Text(
    bd=0,
    bg="#F3F3F3",
    fg="#000716",
    highlightthickness=0
)
entry_2.place(
    x=14.0,
    y=83.0,
    width=281.0,
    height=165.0
)
def on_entry2_click(event):
    # function that gets called whenever entry1 is clicked
    if entry_2.get("1.0", 'end-1c') == 'Type list of words here...':
        entry_2.delete("1.0", "end")  # delete all the text in the entry
        entry_2.insert("1.0", '')  # Insert blank for user input
        entry_2.config(fg='black')

def on_entry2_focusout(event):
    if entry_2.get("1.0", 'end-1c') == '':
        entry_2.insert("1.0", 'Type list of words here...')
        entry_2.config(fg='grey')

entry_2.bind('<FocusIn>', on_entry2_click)
entry_2.bind('<FocusOut>', on_entry2_focusout)

# Insert default text
entry_2.insert("1.0", 'Type list of words here...')
entry_2.config(fg='grey')

canvas.create_rectangle(
    15.0,
    261.0,
    293.0,
    340.0,
    fill="#F3F3F3",
    outline="")

canvas.create_text(
    22.0,
    268.0,
    anchor="nw",
    text="Word search shape ",
    fill="#000000",
    font=("Nunito", 20 * -1)
)

canvas.create_rectangle(
    22.0,
    300.0,
    286.0,
    333.0,
    fill="#FFFFFF",
    outline="")

# Create the Combobox
values = ["Square", "Circle", "Heart"]  # Replace with your options
combobox = ttk.Combobox(window, values=values, width=25, font=("Nunito", 13))

# Position of the rectangle
x1, y1, x2, y2 = 22.0, 300.0, 286.0, 333.0
# Position of the Combobox
x = (x1 + x2) / 2
y = (y1 + y2) / 2

# Create a window in the canvas and add the Combobox to it
canvas.create_window(x, y, window=combobox)

canvas.create_rectangle(
    14.0,
    348.0,
    292.0,
    427.0,
    fill="#F3F3F3",
    outline="")

canvas.create_text(
    22.0,
    359.0,
    anchor="nw",
    text="Word direction ",
    fill="#000000",
    font=("Nunito", 20 * -1)
)

canvas.create_rectangle(
    22.0,
    391.0,
    286.0,
    424.0,
    fill="#FFFFFF",
    outline="")

# Create the Combobox
values = ["-> <-", "->", "<-"]  # Replace with your options
combobox = ttk.Combobox(window, values=values, width=25, font=("Nunito", 13))

# Position of the rectangle
x1, y1, x2, y2 = 22.0, 391.0, 286.0, 424.0
# Position of the Combobox
x = (x1 + x2) / 2
y = (y1 + y2) / 2

# Create a window in the canvas and add the Combobox to it
canvas.create_window(x, y, window=combobox)

canvas.create_rectangle(
    15.0,
    436.0,
    293.0,
    515.0,
    fill="#F3F3F3",
    outline="")

canvas.create_text(
    22.0,
    443.0,
    anchor="nw",
    text="Word search size ",
    fill="#000000",
    font=("Nunito", 20 * -1)
)

canvas.create_rectangle(
    15.0,
    524.0,
    293.0,
    567.0,
    fill="#F3F3F3",
    outline="")

from tkinter import Radiobutton, StringVar

# Create the Radiobuttons
var = StringVar()
radiobutton_small = Radiobutton(window, text="Small", variable=var, value="Small", font=("Nunito", 14))
radiobutton_medium = Radiobutton(window, text="Medium", variable=var, value="Medium", font=("Nunito", 14))
radiobutton_large = Radiobutton(window, text="Large", variable=var, value="Large", font=("Nunito", 14))

# Position of the rectangle
x1, y1, x2, y2 = 22.0, 443.0, 293.0, 540.0

# Position of the Radiobuttons
x_small = x1 + (x2 - x1) / 6
x_medium = x1 + 3 * (x2 - x1) / 6
x_large = x1 + 5 * (x2 - x1) / 6
y = (y1 + y2) / 2

# Create windows in the canvas and add the Radiobuttons to them
canvas.create_window(x_small, y, window=radiobutton_small)
canvas.create_window(x_medium, y, window=radiobutton_medium)
canvas.create_window(x_large, y, window=radiobutton_large)

canvas.create_rectangle(
    14.0,
    574.0,
    292.0,
    617.0,
    fill="#F3F3F3",
    outline="")

canvas.create_rectangle(
    15.0,
    624.0,
    293.0,
    667.0,
    fill="#F3F3F3",
    outline="")

canvas.create_text(
    22.0,
    536.0,
    anchor="nw",
    text="Show the answer key",
    fill="#000000",
    font=("Nunito", 20 * -1)
)

from tkinter import Checkbutton, IntVar

# Create the Checkbutton
var = IntVar()
checkbox = Checkbutton(window, text="", variable=var, font=("Nunito", 10), )

# Position of the text
x_text, y_text = 54.0, 535.0

# Position of the Checkbutton
x_checkbox = x_text + 200  # Adjust this value to position the checkbox correctly
y_checkbox = y_text

# Create a window in the canvas and add the Checkbutton to it
canvas.create_window(x_checkbox, y_checkbox, window=checkbox, anchor="nw")

canvas.create_text(
    22.0,
    584.0,
    anchor="nw",
    text="Show the word direction",
    fill="#000000",
    font=("Nunito", 20 * -1)
)

# Create the Checkbutton
var = IntVar()
checkbox = Checkbutton(window, text="", variable=var, font=("Nunito", 10), )

# Position of the text
x_text, y_text = 54.0, 583.0

# Position of the Checkbutton
x_checkbox = x_text + 200  # Adjust this value to position the checkbox correctly
y_checkbox = y_text

# Create a window in the canvas and add the Checkbutton to it
canvas.create_window(x_checkbox, y_checkbox, window=checkbox, anchor="nw")

canvas.create_text(
    22.0,
    633.0,
    anchor="nw",
    text="Show the word list",
    fill="#000000",
    font=("Nunito", 20 * -1)
)

# Create the Checkbutton
var = IntVar()
checkbox = Checkbutton(window, text="", variable=var, font=("Nunito", 10), )

# Position of the text
x_text, y_text = 54.0, 632.0

# Position of the Checkbutton
x_checkbox = x_text + 200  # Adjust this value to position the checkbox correctly
y_checkbox = y_text

# Create a window in the canvas and add the Checkbutton to it
canvas.create_window(x_checkbox, y_checkbox, window=checkbox, anchor="nw")

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    text="SCRAMBLE",
    compound="center",  # Add this line
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_1 clicked"),
    relief="flat",
    font=("Nunito", 20),  # Change the font size here
    fg="white"  # Change the font color here
)
button_1.place(
    x=15.0,
    y=684.0,
    width=278.0,
    height=43.0
)

canvas.create_text(
    26.0,
    692.0,
    anchor="nw",
    text="SCRAMBLE",
    fill="#FFFFFF",
    font=("Nunito", 20 * -1)
)

button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    279.0,
    54.0,
    image=image_image_1
)

button_2 = Button(
    image=image_image_1,  # Use image_1 here
    borderwidth=0,
    highlightthickness=0,
    command=lambda: print("button_2 clicked"),
    relief="flat"
)
button_2.place(
    x=265.0,
    y=40.0,
    width=28.0,
    height=28.0
)

# Bring image_1 to front
canvas.tag_raise(image_1)

canvas.create_rectangle(
    319.0,
    37.0,
    879.0,
    727.0,
    fill="#D9D9D9",
    outline="")

def add_text_to_canvas():
    # Delete previous text
    canvas.delete("grid_text")

    # Rest of your scramble function here...
    # Get text from entry_2
    text = entry_2.get("1.0", 'end-1c')

    # Split the text into words
    words = text.split()

    # Join the words with ","
    text = ",".join(words)
    puzzle = WordSearch(text)
    puzzle = str(puzzle)
    text = puzzle[83:475]

    # Convert text to an array of characters
    text_array = list(text.replace('\n', '').replace(' ', ''))

    # Create a 14x14 grid
    grid = [text_array[i:i+14] for i in range(0, len(text_array), 14)]

    # Calculate the size of each cell
    cell_width = (879.0 - 319.0) / 14
    cell_height = (727.0 - 37.0) / 14

    # Add text to canvas
    for i in range(14):
        for j in range(14):
            canvas.create_text(
                319.0 + j * cell_width + cell_width / 2,  # x position
                37.0 + i * cell_height + cell_height / 2,  # y position
                text=grid[i][j],
                tags="grid_text",  # Add this line
                font=("Nunito", 12)  # Change the font size here
            )

def scramble():
    # Delete previous text
    canvas.delete("all")

    # Rest of your scramble function here...

button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_1 = Button(
    image=button_image_1,
    text="SCRAMBLE",
    compound="center",  # Add this line
    borderwidth=0,
    highlightthickness=0,
    command=add_text_to_canvas,  # Change the command here
    relief="flat",
    font=("Nunito", 20),  # Change the font size here
    fg="white"  # Change the font color here
)
button_1.place(
    x=15.0,
    y=684.0,
    width=278.0,
    height=43.0
)

canvas.create_text(
    26.0,
    692.0,
    anchor="nw",
    text="SCRAMBLE",
    fill="#FFFFFF",
    font=("Nunito", 20 * -1)
)

window.resizable(False, False)
window.mainloop()
